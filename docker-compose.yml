services:
  postgresql:
    container_name: postgresql
    image: postgres:17
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - 7801:5432
    volumes:
      - node-postgresql-data:/var/lib/postgresql/data
    networks:
      - monitoring-network
      - dev_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "7802:80"
    volumes:
      - ./server/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./server/node_api.conf:/etc/nginx/sites-enabled/server.conf:ro
      - ./server/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - monitoring-network
      - dev_network
    labels:
      - "logging=promtail"
      - "job=nginx"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - "./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus:/prometheus
    networks:
      - monitoring-network
    ports:
      - 7901:9090

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "7902:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=Abc123456*
      - GF_INSTALL_PLUGINS=grafana-github-datasource
      - GITHUB_ACCESS_TOKEN=

  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - 7903:3100
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config.yml
      - loki-data:/loki
    networks:
      - monitoring-network

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/config.yml
    volumes:
      # Archivo de configuración
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      # Volumen para el socket de Docker (para descubrir contenedores)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Volumen para leer los logs de los contenedores (json-file por defecto)
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      # Volumen para guardar la posición de lectura
      - ./monitoring/positions:/tmp
    networks:
      - monitoring-network
    depends_on:
      - loki

volumes:
  node-postgresql-data:
    driver: local

  prometheus:
    driver: local

  grafana-data:
    driver: local

  loki-data:
    driver: local

networks:
  monitoring-network:
    external: true

  dev_network:
    external: true